
//======================================================
// Source code generated by jvider v1.8.1 UNREGISTERED version.
// http://www.jvider.com/
//======================================================
import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JSpinner;
import javax.swing.SpinnerModel;
import javax.swing.SpinnerNumberModel;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import com.github.sarxos.webcam.Webcam;

public class mainWindow extends JFrame {
	static mainWindow thefdsg;

	JPanel panel0;
	JLabel label0;
	JLabel label1;
	JLabel label2;
	JLabel label3;
	JLabel label4;
	JLabel label5;
	JSpinner spinner0;
	JSpinner spinner1;
	JSpinner spinner2;
	JSpinner spinner3;
	JSpinner spinner4;
	JSpinner spinner5;
	JButton but0;
	static Webcam webcam;
	static Dimension size;
	int samplesPerPosition = 3;


	public static void main(String args[]) {

		size = new Dimension(640, 480);
		webcam = Webcam.getDefault();
		webcam.setViewSize(size);
		webcam.open(true);

		voce.SpeechInterface.init("./src/lib/voce-0.9.1/lib", true, true, "./src/lib/voce-0.9.1/lib/gram", "response");
		voce.SpeechInterface.setRecognizerEnabled(false);

		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (ClassNotFoundException e) {
		} catch (InstantiationException e) {
		} catch (IllegalAccessException e) {
		} catch (UnsupportedLookAndFeelException e) {
		}
		thefdsg = new mainWindow();
	}

	public mainWindow() {
		super("LiGer - Data Collection");
		panel0 = new JPanel();
		GridBagLayout gbpanel0 = new GridBagLayout();
		GridBagConstraints gbcpanel0 = new GridBagConstraints();
		panel0.setLayout(gbpanel0);

		label0 = new JLabel("Lighting");
		gbcpanel0.gridx = 2;
		gbcpanel0.gridy = 3;
		gbcpanel0.gridwidth = 7;
		gbcpanel0.gridheight = 2;
		gbcpanel0.fill = GridBagConstraints.BOTH;
		gbcpanel0.weightx = 1;
		gbcpanel0.weighty = 1;
		gbcpanel0.anchor = GridBagConstraints.NORTH;
		gbpanel0.setConstraints(label0, gbcpanel0);
		panel0.add(label0);

		label1 = new JLabel("Orientation");
		gbcpanel0.gridx = 2;
		gbcpanel0.gridy = 6;
		gbcpanel0.gridwidth = 7;
		gbcpanel0.gridheight = 2;
		gbcpanel0.fill = GridBagConstraints.BOTH;
		gbcpanel0.weightx = 1;
		gbcpanel0.weighty = 1;
		gbcpanel0.anchor = GridBagConstraints.NORTH;
		gbpanel0.setConstraints(label1, gbcpanel0);
		panel0.add(label1);

		label2 = new JLabel("Position");
		gbcpanel0.gridx = 2;
		gbcpanel0.gridy = 9;
		gbcpanel0.gridwidth = 7;
		gbcpanel0.gridheight = 2;
		gbcpanel0.fill = GridBagConstraints.BOTH;
		gbcpanel0.weightx = 1;
		gbcpanel0.weighty = 1;
		gbcpanel0.anchor = GridBagConstraints.NORTH;
		gbpanel0.setConstraints(label2, gbcpanel0);
		panel0.add(label2);

		label3 = new JLabel("SampleNumber");
		gbcpanel0.gridx = 2;
		gbcpanel0.gridy = 12;
		gbcpanel0.gridwidth = 7;
		gbcpanel0.gridheight = 2;
		gbcpanel0.fill = GridBagConstraints.BOTH;
		gbcpanel0.weightx = 1;
		gbcpanel0.weighty = 1;
		gbcpanel0.anchor = GridBagConstraints.NORTH;
		gbpanel0.setConstraints(label3, gbcpanel0);
		panel0.add(label3);

		label4 = new JLabel("Gesture");
		gbcpanel0.gridx = 2;
		gbcpanel0.gridy = 15;
		gbcpanel0.gridwidth = 7;
		gbcpanel0.gridheight = 2;
		gbcpanel0.fill = GridBagConstraints.BOTH;
		gbcpanel0.weightx = 1;
		gbcpanel0.weighty = 1;
		gbcpanel0.anchor = GridBagConstraints.NORTH;
		gbpanel0.setConstraints(label4, gbcpanel0);
		panel0.add(label4);
		
		label5 = new JLabel("Subject");
		gbcpanel0.gridx = 2;
		gbcpanel0.gridy = 18;
		gbcpanel0.gridwidth = 7;
		gbcpanel0.gridheight = 2;
		gbcpanel0.fill = GridBagConstraints.BOTH;
		gbcpanel0.weightx = 1;
		gbcpanel0.weighty = 1;
		gbcpanel0.anchor = GridBagConstraints.NORTH;
		gbpanel0.setConstraints(label5, gbcpanel0);
		panel0.add(label5);

		SpinnerModel sm0 = new SpinnerNumberModel(1, 1, 2, 1); // default
																// value,lower
																// bound,upper
																// bound,increment
																// by

		spinner0 = new JSpinner(sm0);
		gbcpanel0.gridx = 12;
		gbcpanel0.gridy = 3;
		gbcpanel0.gridwidth = 5;
		gbcpanel0.gridheight = 2;
		gbcpanel0.fill = GridBagConstraints.BOTH;
		gbcpanel0.weightx = 1;
		gbcpanel0.weighty = 0;
		gbcpanel0.anchor = GridBagConstraints.NORTH;
		gbpanel0.setConstraints(spinner0, gbcpanel0);
		panel0.add(spinner0);

		SpinnerModel sm1 = new SpinnerNumberModel(1, 1, 4, 1); // default
																// value,lower
																// bound,upper
																// bound,increment
																// by

		spinner1 = new JSpinner(sm1);
		gbcpanel0.gridx = 12;
		gbcpanel0.gridy = 6;
		gbcpanel0.gridwidth = 5;
		gbcpanel0.gridheight = 2;
		gbcpanel0.fill = GridBagConstraints.BOTH;
		gbcpanel0.weightx = 1;
		gbcpanel0.weighty = 0;
		gbcpanel0.anchor = GridBagConstraints.NORTH;
		gbpanel0.setConstraints(spinner1, gbcpanel0);
		panel0.add(spinner1);

		SpinnerModel sm2 = new SpinnerNumberModel(1, 1, 9, 1); // default
																// value,lower
																// bound,upper
																// bound,increment
																// by

		spinner2 = new JSpinner(sm2);
		gbcpanel0.gridx = 12;
		gbcpanel0.gridy = 9;
		gbcpanel0.gridwidth = 5;
		gbcpanel0.gridheight = 2;
		gbcpanel0.fill = GridBagConstraints.BOTH;
		gbcpanel0.weightx = 1;
		gbcpanel0.weighty = 0;
		gbcpanel0.anchor = GridBagConstraints.NORTH;
		gbpanel0.setConstraints(spinner2, gbcpanel0);
		panel0.add(spinner2);

		SpinnerModel sm3 = new SpinnerNumberModel(1, 1, 5, 1); // default
																// value,lower
																// bound,upper
																// bound,increment
																// by

		spinner3 = new JSpinner(sm3);
		gbcpanel0.gridx = 12;
		gbcpanel0.gridy = 12;
		gbcpanel0.gridwidth = 5;
		gbcpanel0.gridheight = 2;
		gbcpanel0.fill = GridBagConstraints.BOTH;
		gbcpanel0.weightx = 1;
		gbcpanel0.weighty = 0;
		gbcpanel0.anchor = GridBagConstraints.NORTH;
		gbpanel0.setConstraints(spinner3, gbcpanel0);
		panel0.add(spinner3);

		SpinnerModel sm4 = new SpinnerNumberModel(1, 1, 6, 1); // default
																// value,lower
																// bound,upper
																// bound,increment
																// by

		spinner4 = new JSpinner(sm4);
		gbcpanel0.gridx = 12;
		gbcpanel0.gridy = 15;
		gbcpanel0.gridwidth = 5;
		gbcpanel0.gridheight = 2;
		gbcpanel0.fill = GridBagConstraints.BOTH;
		gbcpanel0.weightx = 1;
		gbcpanel0.weighty = 0;
		gbcpanel0.anchor = GridBagConstraints.NORTH;
		gbpanel0.setConstraints(spinner4, gbcpanel0);
		panel0.add(spinner4);
		
		SpinnerModel sm5 = new SpinnerNumberModel(1, 1, 1000, 1); // default
		// value,lower
		// bound,upper
		// bound,increment
		// by
		
		spinner5 = new JSpinner(sm5);
		gbcpanel0.gridx = 12;
		gbcpanel0.gridy = 18;
		gbcpanel0.gridwidth = 5;
		gbcpanel0.gridheight = 2;
		gbcpanel0.fill = GridBagConstraints.BOTH;
		gbcpanel0.weightx = 1;
		gbcpanel0.weighty = 0;
		gbcpanel0.anchor = GridBagConstraints.NORTH;
		gbpanel0.setConstraints(spinner5, gbcpanel0);
		panel0.add(spinner5);

		but0 = new JButton("Record");
		gbcpanel0.gridx = 7;
		gbcpanel0.gridy = 21;
		gbcpanel0.gridwidth = 6;
		gbcpanel0.gridheight = 2;
		gbcpanel0.fill = GridBagConstraints.BOTH;
		gbcpanel0.weightx = 1;
		gbcpanel0.weighty = 0;
		gbcpanel0.anchor = GridBagConstraints.NORTH;
		gbpanel0.setConstraints(but0, gbcpanel0);

		but0.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				// Call recording code.
				//lighting, orienation, position, gesture, sample, subjectID

				InteractiveClient.captureMethod((Integer) spinner0.getValue(), (Integer) spinner1.getValue(),
						(Integer) spinner2.getValue(), (Integer) spinner4.getValue(), (Integer) spinner3.getValue(), (Integer) spinner5.getValue(), webcam, size);
				int sampleNumber = (Integer) (spinner3.getValue());
				if (sampleNumber < 3) {
					sampleNumber++;
					spinner3.setValue(new Integer(sampleNumber));
				} else {
					spinner3.setValue(new Integer(1));
					int positionNumber = (Integer) (spinner2.getValue());

					if (positionNumber < 9) {
						positionNumber++;
						spinner2.setValue(new Integer(positionNumber));
					} else {
						positionNumber = 1;
						spinner2.setValue(new Integer(positionNumber));
						int orientationNumber = (Integer) (spinner1.getValue());
						{
							orientationNumber++;
							if (orientationNumber <= 4)
								spinner1.setValue(new Integer(orientationNumber));
						}
					}

				}

			}
		});
		panel0.add(but0);

		setDefaultCloseOperation(EXIT_ON_CLOSE);

		setContentPane(panel0);
		pack();
		setVisible(true);
	}
}
